@using System.Web.Optimization
@inherits System.Web.Mvc.WebViewPage<Smarterdam.Web.ViewModels.ChartViewModel>

@{
    ViewBag.Title = "Chart";
}
@*@Scripts.Render("~/bundles/jquery")  *@
<script type="text/javascript">
    $(document).ready(function() {
        var chart1 = $("#chartContainer@(Model.Name)").highcharts({
            chart: {
                renderTo: 'chartContainer@(Model.Name)',
                type: 'line'
            },
            colors: ['#2f7ed8', '#c41e3a'],
            title: {
                text: ''
            },
            xAxis: {
                type: 'datetime',
                gridLineWidth: 1,
                tickPixelInterval: 45,
                maxZoom: 20 * 1000
            },
            yAxis: {
                title: {
                    type: '',
                    text: 'Energy consumption'
                }
            },
            plotOptions: {
                line: {
                    gapSize: 0,
                    connectNulls: true,
                    lineWidth: 1,
                    marker: {
                        enabled: false
                    }
                },
                series: {
                    cropThreshold: 50
                }
            },
            tooltip: {
                shared: true,
                crosshairs: true
            },
            series: [
                {
                    name: "Real",
                    data: DrawGraph(eval('@Html.Raw(Model.ChartData)'), function (x) { return x.ValueReal; })
                },
                {
                    name: "Forecast",
                    data: DrawGraph(eval('@Html.Raw(Model.ChartData)'), function (x) { return x.ValuePredicted; })
                }
            ]
        });
    });
    
    function DrawGraph(str_values, propertyFunc) {
        var data = [];

        $.each(str_values, function (idx, val) { if (propertyFunc(val) != null) {
                                                     data.push([ parseJsonDate(val.TimeStamp), parseFloat(propertyFunc(val)) ]);
                                                 } });

        data = data.sort(function(a, b) { return a[0] > b[0] ? 1 : -1; });

        return data;
    };
    
    function parseJsonDate(jsonDateString) {
        var date = new Date(jsonDateString);

        var utcDate = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());
        return utcDate;
    }
</script>
<div id="chartContainer@(Model.Name)"></div>
<div id="ErrorText@(Model.Name)">Testing error: @( Model.Error.HasValue ? Model.Error.Value.ToString("00.00") : "Unknown" )</div>