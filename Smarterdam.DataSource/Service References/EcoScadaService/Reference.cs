//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Smarterdam.DataSource.EcoSCADAService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildingState", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    public enum BuildingState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        all = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AverageFormat", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    public enum AverageFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SevenLastDays = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FourSimilarDays = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableConnections", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class TableConnections : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AverageValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstMeasurementTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastMeasurementTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LastMeasurementValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaximumValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Smarterdam.DataSource.EcoSCADAService.Faces> SatisfactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TodayEconomyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AverageValue {
            get {
                return this.AverageValueField;
            }
            set {
                if ((this.AverageValueField.Equals(value) != true)) {
                    this.AverageValueField = value;
                    this.RaisePropertyChanged("AverageValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimention {
            get {
                return this.DimentionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimentionField, value) != true)) {
                    this.DimentionField = value;
                    this.RaisePropertyChanged("Dimention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstMeasurementTime {
            get {
                return this.FirstMeasurementTimeField;
            }
            set {
                if ((this.FirstMeasurementTimeField.Equals(value) != true)) {
                    this.FirstMeasurementTimeField = value;
                    this.RaisePropertyChanged("FirstMeasurementTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastMeasurementTime {
            get {
                return this.LastMeasurementTimeField;
            }
            set {
                if ((this.LastMeasurementTimeField.Equals(value) != true)) {
                    this.LastMeasurementTimeField = value;
                    this.RaisePropertyChanged("LastMeasurementTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LastMeasurementValue {
            get {
                return this.LastMeasurementValueField;
            }
            set {
                if ((this.LastMeasurementValueField.Equals(value) != true)) {
                    this.LastMeasurementValueField = value;
                    this.RaisePropertyChanged("LastMeasurementValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumValue {
            get {
                return this.MaximumValueField;
            }
            set {
                if ((this.MaximumValueField.Equals(value) != true)) {
                    this.MaximumValueField = value;
                    this.RaisePropertyChanged("MaximumValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Smarterdam.DataSource.EcoSCADAService.Faces> Satisfaction {
            get {
                return this.SatisfactionField;
            }
            set {
                if ((this.SatisfactionField.Equals(value) != true)) {
                    this.SatisfactionField = value;
                    this.RaisePropertyChanged("Satisfaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TodayEconomy {
            get {
                return this.TodayEconomyField;
            }
            set {
                if ((this.TodayEconomyField.Equals(value) != true)) {
                    this.TodayEconomyField = value;
                    this.RaisePropertyChanged("TodayEconomy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faces", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    public enum Faces : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min20 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min40 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min60 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min80 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Min100 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStates", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class UserStates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Smarterdam.DataSource.EcoSCADAService.InstanceCugPair[] AvailableInstancesCugsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool authStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> cugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string guidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int instanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string loginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Smarterdam.DataSource.EcoSCADAService.InstanceCugPair[] AvailableInstancesCugs {
            get {
                return this.AvailableInstancesCugsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailableInstancesCugsField, value) != true)) {
                    this.AvailableInstancesCugsField = value;
                    this.RaisePropertyChanged("AvailableInstancesCugs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool authState {
            get {
                return this.authStateField;
            }
            set {
                if ((this.authStateField.Equals(value) != true)) {
                    this.authStateField = value;
                    this.RaisePropertyChanged("authState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> cug {
            get {
                return this.cugField;
            }
            set {
                if ((this.cugField.Equals(value) != true)) {
                    this.cugField = value;
                    this.RaisePropertyChanged("cug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string guid {
            get {
                return this.guidField;
            }
            set {
                if ((object.ReferenceEquals(this.guidField, value) != true)) {
                    this.guidField = value;
                    this.RaisePropertyChanged("guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int instance {
            get {
                return this.instanceField;
            }
            set {
                if ((this.instanceField.Equals(value) != true)) {
                    this.instanceField = value;
                    this.RaisePropertyChanged("instance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string login {
            get {
                return this.loginField;
            }
            set {
                if ((object.ReferenceEquals(this.loginField, value) != true)) {
                    this.loginField = value;
                    this.RaisePropertyChanged("login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userMode {
            get {
                return this.userModeField;
            }
            set {
                if ((this.userModeField.Equals(value) != true)) {
                    this.userModeField = value;
                    this.RaisePropertyChanged("userMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstanceCugPair", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class InstanceCugPair : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cugField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int instanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cug {
            get {
                return this.cugField;
            }
            set {
                if ((this.cugField.Equals(value) != true)) {
                    this.cugField = value;
                    this.RaisePropertyChanged("cug");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int instance {
            get {
                return this.instanceField;
            }
            set {
                if ((this.instanceField.Equals(value) != true)) {
                    this.instanceField = value;
                    this.RaisePropertyChanged("instance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Building", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class Building : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErectedYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StuffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkingHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string buildingNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErectedYear {
            get {
                return this.ErectedYearField;
            }
            set {
                if ((this.ErectedYearField.Equals(value) != true)) {
                    this.ErectedYearField = value;
                    this.RaisePropertyChanged("ErectedYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Stuff {
            get {
                return this.StuffField;
            }
            set {
                if ((this.StuffField.Equals(value) != true)) {
                    this.StuffField = value;
                    this.RaisePropertyChanged("Stuff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Visitors {
            get {
                return this.VisitorsField;
            }
            set {
                if ((this.VisitorsField.Equals(value) != true)) {
                    this.VisitorsField = value;
                    this.RaisePropertyChanged("Visitors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkingHours {
            get {
                return this.WorkingHoursField;
            }
            set {
                if ((this.WorkingHoursField.Equals(value) != true)) {
                    this.WorkingHoursField = value;
                    this.RaisePropertyChanged("WorkingHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string buildingName {
            get {
                return this.buildingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.buildingNameField, value) != true)) {
                    this.buildingNameField = value;
                    this.RaisePropertyChanged("buildingName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildingConsumption", Namespace="http://schemas.datacontract.org/2004/07/WcfEcoSCADAData")]
    [System.SerializableAttribute()]
    public partial class BuildingConsumption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ClosedHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OpenHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ClosedHours {
            get {
                return this.ClosedHoursField;
            }
            set {
                if ((this.ClosedHoursField.Equals(value) != true)) {
                    this.ClosedHoursField = value;
                    this.RaisePropertyChanged("ClosedHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OpenHours {
            get {
                return this.OpenHoursField;
            }
            set {
                if ((this.OpenHoursField.Equals(value) != true)) {
                    this.OpenHoursField = value;
                    this.RaisePropertyChanged("OpenHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EcoSCADAService.IEcoSCADAData")]
    public interface IEcoSCADAData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetSumPerPeriod", ReplyAction="http://tempuri.org/IEcoSCADAData/GetSumPerPeriodResponse")]
        double GetSumPerPeriod(int measurementId, System.DateTime fr, System.DateTime to, Smarterdam.DataSource.EcoSCADAService.BuildingState bs, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetMeasurementsPerPeriod", ReplyAction="http://tempuri.org/IEcoSCADAData/GetMeasurementsPerPeriodResponse")]
        Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetMeasurementsPerPeriod(int measurementId, System.DateTime fr, System.DateTime to, System.Nullable<Smarterdam.DataSource.EcoSCADAService.BuildingState> bs, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetReductionsCo2Kg", ReplyAction="http://tempuri.org/IEcoSCADAData/GetReductionsCo2KgResponse")]
        double GetReductionsCo2Kg(int measurementId, System.DateTime fr, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetDailyAverage", ReplyAction="http://tempuri.org/IEcoSCADAData/GetDailyAverageResponse")]
        Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetDailyAverage(int measurementId, System.DateTime baseDateTime, Smarterdam.DataSource.EcoSCADAService.AverageFormat mode, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetCugList", ReplyAction="http://tempuri.org/IEcoSCADAData/GetCugListResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetCugList(System.Nullable<int> instanceId, System.Nullable<int> userId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetBuildingList", ReplyAction="http://tempuri.org/IEcoSCADAData/GetBuildingListResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetBuildingList(int cugid, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetMeasurementsList", ReplyAction="http://tempuri.org/IEcoSCADAData/GetMeasurementsListResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetMeasurementsList(int BuildingId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetCarsKilometers", ReplyAction="http://tempuri.org/IEcoSCADAData/GetCarsKilometersResponse")]
        Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetCarsKilometers(int measurementid, System.DateTime from, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetInstances", ReplyAction="http://tempuri.org/IEcoSCADAData/GetInstancesResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetInstances(System.Nullable<int> userId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetBuildingWorkingHours", ReplyAction="http://tempuri.org/IEcoSCADAData/GetBuildingWorkingHoursResponse")]
        Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetBuildingWorkingHours(int buildingId, System.DateTime From, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetReductionsCo2Relative", ReplyAction="http://tempuri.org/IEcoSCADAData/GetReductionsCo2RelativeResponse")]
        double GetReductionsCo2Relative(int SolarPanelMeasurementId, int ConsumptionMeasurementId, System.DateTime fr, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/UserExists", ReplyAction="http://tempuri.org/IEcoSCADAData/UserExistsResponse")]
        Smarterdam.DataSource.EcoSCADAService.UserStates UserExists(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetMeasurementsInfo", ReplyAction="http://tempuri.org/IEcoSCADAData/GetMeasurementsInfoResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections GetMeasurementsInfo(int measurementId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetUserInfo", ReplyAction="http://tempuri.org/IEcoSCADAData/GetUserInfoResponse")]
        Smarterdam.DataSource.EcoSCADAService.UserStates GetUserInfo(string user, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetListOfBuildingsByUserId", ReplyAction="http://tempuri.org/IEcoSCADAData/GetListOfBuildingsByUserIdResponse")]
        Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetListOfBuildingsByUserId(int userId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetBuildingProperties", ReplyAction="http://tempuri.org/IEcoSCADAData/GetBuildingPropertiesResponse")]
        Smarterdam.DataSource.EcoSCADAService.Building[] GetBuildingProperties(System.Nullable<int> BuildingId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADAData/GetDayNightRatio", ReplyAction="http://tempuri.org/IEcoSCADAData/GetDayNightRatioResponse")]
        Smarterdam.DataSource.EcoSCADAService.BuildingConsumption GetDayNightRatio(int measurementId, System.DateTime date, string guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEcoSCADADataChannel : Smarterdam.DataSource.EcoSCADAService.IEcoSCADAData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EcoSCADADataClient : System.ServiceModel.ClientBase<Smarterdam.DataSource.EcoSCADAService.IEcoSCADAData>, Smarterdam.DataSource.EcoSCADAService.IEcoSCADAData {
        
        public EcoSCADADataClient() {
        }
        
        public EcoSCADADataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EcoSCADADataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EcoSCADADataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EcoSCADADataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double GetSumPerPeriod(int measurementId, System.DateTime fr, System.DateTime to, Smarterdam.DataSource.EcoSCADAService.BuildingState bs, string guid) {
            return base.Channel.GetSumPerPeriod(measurementId, fr, to, bs, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetMeasurementsPerPeriod(int measurementId, System.DateTime fr, System.DateTime to, System.Nullable<Smarterdam.DataSource.EcoSCADAService.BuildingState> bs, string guid) {
            return base.Channel.GetMeasurementsPerPeriod(measurementId, fr, to, bs, guid);
        }
        
        public double GetReductionsCo2Kg(int measurementId, System.DateTime fr, System.DateTime to, string guid) {
            return base.Channel.GetReductionsCo2Kg(measurementId, fr, to, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetDailyAverage(int measurementId, System.DateTime baseDateTime, Smarterdam.DataSource.EcoSCADAService.AverageFormat mode, string guid) {
            return base.Channel.GetDailyAverage(measurementId, baseDateTime, mode, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetCugList(System.Nullable<int> instanceId, System.Nullable<int> userId, string guid) {
            return base.Channel.GetCugList(instanceId, userId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetBuildingList(int cugid, string guid) {
            return base.Channel.GetBuildingList(cugid, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetMeasurementsList(int BuildingId, string guid) {
            return base.Channel.GetMeasurementsList(BuildingId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetCarsKilometers(int measurementid, System.DateTime from, System.DateTime to, string guid) {
            return base.Channel.GetCarsKilometers(measurementid, from, to, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetInstances(System.Nullable<int> userId, string guid) {
            return base.Channel.GetInstances(userId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.CompositeType[] GetBuildingWorkingHours(int buildingId, System.DateTime From, System.DateTime to, string guid) {
            return base.Channel.GetBuildingWorkingHours(buildingId, From, to, guid);
        }
        
        public double GetReductionsCo2Relative(int SolarPanelMeasurementId, int ConsumptionMeasurementId, System.DateTime fr, System.DateTime to, string guid) {
            return base.Channel.GetReductionsCo2Relative(SolarPanelMeasurementId, ConsumptionMeasurementId, fr, to, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.UserStates UserExists(string user, string password) {
            return base.Channel.UserExists(user, password);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections GetMeasurementsInfo(int measurementId, string guid) {
            return base.Channel.GetMeasurementsInfo(measurementId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.UserStates GetUserInfo(string user, string guid) {
            return base.Channel.GetUserInfo(user, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.TableConnections[] GetListOfBuildingsByUserId(int userId, string guid) {
            return base.Channel.GetListOfBuildingsByUserId(userId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.Building[] GetBuildingProperties(System.Nullable<int> BuildingId, string guid) {
            return base.Channel.GetBuildingProperties(BuildingId, guid);
        }
        
        public Smarterdam.DataSource.EcoSCADAService.BuildingConsumption GetDayNightRatio(int measurementId, System.DateTime date, string guid) {
            return base.Channel.GetDayNightRatio(measurementId, date, guid);
        }
    }
}
