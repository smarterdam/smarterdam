//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Smarterdam.DataSource.NewEcoSCADADataService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementType", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum MeasurementType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Internal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeatherConditions = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuildingP", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADADataService")]
    [System.SerializableAttribute()]
    public partial class BuildingP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErectedYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<int, string>[] ListExternalConditionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.KeyValuePair<int, string>[] ListMeasurementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErectedYear {
            get {
                return this.ErectedYearField;
            }
            set {
                if ((this.ErectedYearField.Equals(value) != true)) {
                    this.ErectedYearField = value;
                    this.RaisePropertyChanged("ErectedYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<int, string>[] ListExternalConditions {
            get {
                return this.ListExternalConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListExternalConditionsField, value) != true)) {
                    this.ListExternalConditionsField = value;
                    this.RaisePropertyChanged("ListExternalConditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.KeyValuePair<int, string>[] ListMeasurements {
            get {
                return this.ListMeasurementsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListMeasurementsField, value) != true)) {
                    this.ListMeasurementsField = value;
                    this.RaisePropertyChanged("ListMeasurements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Staff {
            get {
                return this.StaffField;
            }
            set {
                if ((this.StaffField.Equals(value) != true)) {
                    this.StaffField = value;
                    this.RaisePropertyChanged("Staff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Visitors {
            get {
                return this.VisitorsField;
            }
            set {
                if ((this.VisitorsField.Equals(value) != true)) {
                    this.VisitorsField = value;
                    this.RaisePropertyChanged("Visitors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeasurementP", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADADataService")]
    [System.SerializableAttribute()]
    public partial class MeasurementP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstMeasuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HourlyFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastMeasuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryUnitPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Smarterdam.DataSource.NewEcoSCADADataService.SourceType SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstMeasured {
            get {
                return this.FirstMeasuredField;
            }
            set {
                if ((this.FirstMeasuredField.Equals(value) != true)) {
                    this.FirstMeasuredField = value;
                    this.RaisePropertyChanged("FirstMeasured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HourlyFactor {
            get {
                return this.HourlyFactorField;
            }
            set {
                if ((this.HourlyFactorField.Equals(value) != true)) {
                    this.HourlyFactorField = value;
                    this.RaisePropertyChanged("HourlyFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastMeasured {
            get {
                return this.LastMeasuredField;
            }
            set {
                if ((this.LastMeasuredField.Equals(value) != true)) {
                    this.LastMeasuredField = value;
                    this.RaisePropertyChanged("LastMeasured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryUnit {
            get {
                return this.PrimaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryUnitField, value) != true)) {
                    this.PrimaryUnitField = value;
                    this.RaisePropertyChanged("PrimaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryUnitPerHour {
            get {
                return this.PrimaryUnitPerHourField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryUnitPerHourField, value) != true)) {
                    this.PrimaryUnitPerHourField = value;
                    this.RaisePropertyChanged("PrimaryUnitPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnit {
            get {
                return this.SecondaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitField, value) != true)) {
                    this.SecondaryUnitField = value;
                    this.RaisePropertyChanged("SecondaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnitPerHour {
            get {
                return this.SecondaryUnitPerHourField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitPerHourField, value) != true)) {
                    this.SecondaryUnitPerHourField = value;
                    this.RaisePropertyChanged("SecondaryUnitPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Smarterdam.DataSource.NewEcoSCADADataService.SourceType Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum SourceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterReadings = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PulseCounters = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Schedule = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeaserementStatistics", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum MeaserementStatistics : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AverageValue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Satisfaction = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavedPerPeriod = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SumForOpeningHours = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SumForClosedHours = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DayNightRatio = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReducedCo2AbsoluteAll = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReducedCo2AbsoluteAgreed = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReducedCo2Relative = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Max = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastValue = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavingPerPeriodSolarPanels = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SavingPerPeriodAgreed = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AgreedSavings = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MSResult", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADADataService")]
    [System.SerializableAttribute()]
    public partial class MSResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrimaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SecondaryValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryUnit {
            get {
                return this.PrimaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryUnitField, value) != true)) {
                    this.PrimaryUnitField = value;
                    this.RaisePropertyChanged("PrimaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrimaryValue {
            get {
                return this.PrimaryValueField;
            }
            set {
                if ((this.PrimaryValueField.Equals(value) != true)) {
                    this.PrimaryValueField = value;
                    this.RaisePropertyChanged("PrimaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnit {
            get {
                return this.SecondaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitField, value) != true)) {
                    this.SecondaryUnitField = value;
                    this.RaisePropertyChanged("SecondaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SecondaryValue {
            get {
                return this.SecondaryValueField;
            }
            set {
                if ((this.SecondaryValueField.Equals(value) != true)) {
                    this.SecondaryValueField = value;
                    this.RaisePropertyChanged("SecondaryValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExportMode", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum ExportMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpeningHours = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClosingHours = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllDetailed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnlySchedule = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dataResolution", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum dataResolution : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minute1 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minutes15 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour1 = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour3 = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day1 = 1440,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month1 = 43200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year1 = 518400,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    [System.SerializableAttribute()]
    public partial class Data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryUnitPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrimaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryUnitPerHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SecondaryValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftInTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Smarterdam.DataSource.NewEcoSCADADataService.SourceType> SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> TrustedValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryUnit {
            get {
                return this.PrimaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryUnitField, value) != true)) {
                    this.PrimaryUnitField = value;
                    this.RaisePropertyChanged("PrimaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryUnitPerHour {
            get {
                return this.PrimaryUnitPerHourField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryUnitPerHourField, value) != true)) {
                    this.PrimaryUnitPerHourField = value;
                    this.RaisePropertyChanged("PrimaryUnitPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrimaryValue {
            get {
                return this.PrimaryValueField;
            }
            set {
                if ((this.PrimaryValueField.Equals(value) != true)) {
                    this.PrimaryValueField = value;
                    this.RaisePropertyChanged("PrimaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnit {
            get {
                return this.SecondaryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitField, value) != true)) {
                    this.SecondaryUnitField = value;
                    this.RaisePropertyChanged("SecondaryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryUnitPerHour {
            get {
                return this.SecondaryUnitPerHourField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryUnitPerHourField, value) != true)) {
                    this.SecondaryUnitPerHourField = value;
                    this.RaisePropertyChanged("SecondaryUnitPerHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SecondaryValue {
            get {
                return this.SecondaryValueField;
            }
            set {
                if ((this.SecondaryValueField.Equals(value) != true)) {
                    this.SecondaryValueField = value;
                    this.RaisePropertyChanged("SecondaryValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShiftInTime {
            get {
                return this.ShiftInTimeField;
            }
            set {
                if ((this.ShiftInTimeField.Equals(value) != true)) {
                    this.ShiftInTimeField = value;
                    this.RaisePropertyChanged("ShiftInTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Smarterdam.DataSource.NewEcoSCADADataService.SourceType> Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> TrustedValue {
            get {
                return this.TrustedValueField;
            }
            set {
                if ((this.TrustedValueField.Equals(value) != true)) {
                    this.TrustedValueField = value;
                    this.RaisePropertyChanged("TrustedValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataExportMode", Namespace="http://schemas.datacontract.org/2004/07/EcoSCADAConnections")]
    public enum DataExportMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Average7LastDays = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Average4SimilarDays = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarsCo2SolarPanels = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarsCo2Agreed = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewEcoSCADADataService.IEcoSCADADataService")]
    public interface IEcoSCADADataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/UserExists", ReplyAction="http://tempuri.org/IEcoSCADADataService/UserExistsResponse")]
        bool UserExists(string user, string password, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetUserInfo", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetUserInfoResponse")]
        System.Collections.Generic.KeyValuePair<int, string> GetUserInfo(string userName, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetListOfBuildingsForUser", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetListOfBuildingsForUserResponse")]
        System.Collections.Generic.KeyValuePair<int, string>[] GetListOfBuildingsForUser(int userId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetListOfMeasurementsForBuilding", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetListOfMeasurementsForBuildingResponse")]
        System.Collections.Generic.KeyValuePair<int, string>[] GetListOfMeasurementsForBuilding(int buildingId, Smarterdam.DataSource.NewEcoSCADADataService.MeasurementType mode, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetBuildingProperties", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetBuildingPropertiesResponse")]
        Smarterdam.DataSource.NewEcoSCADADataService.BuildingP GetBuildingProperties(int buildingId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetMeasurementProperties", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetMeasurementPropertiesResponse")]
        Smarterdam.DataSource.NewEcoSCADADataService.MeasurementP GetMeasurementProperties(int measurementId, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetMeasurementStat", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetMeasurementStatResponse")]
        Smarterdam.DataSource.NewEcoSCADADataService.MSResult GetMeasurementStat(int measurementId, System.Nullable<int> referenceId, Smarterdam.DataSource.NewEcoSCADADataService.MeaserementStatistics mode, System.DateTime from, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetMeasurementData", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetMeasurementDataResponse")]
        Smarterdam.DataSource.NewEcoSCADADataService.Data[] GetMeasurementData(int measurementId, Smarterdam.DataSource.NewEcoSCADADataService.ExportMode mode, Smarterdam.DataSource.NewEcoSCADADataService.dataResolution resolution, System.DateTime from, System.DateTime to, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/GetAdvancedDataQuery", ReplyAction="http://tempuri.org/IEcoSCADADataService/GetAdvancedDataQueryResponse")]
        Smarterdam.DataSource.NewEcoSCADADataService.Data[] GetAdvancedDataQuery(int measurement, System.DateTime from, System.DateTime to, Smarterdam.DataSource.NewEcoSCADADataService.DataExportMode ex, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEcoSCADADataService/SetSavingsForMeasurement", ReplyAction="http://tempuri.org/IEcoSCADADataService/SetSavingsForMeasurementResponse")]
        void SetSavingsForMeasurement(int measurementId, double savings, string guid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEcoSCADADataServiceChannel : Smarterdam.DataSource.NewEcoSCADADataService.IEcoSCADADataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EcoSCADADataServiceClient : System.ServiceModel.ClientBase<Smarterdam.DataSource.NewEcoSCADADataService.IEcoSCADADataService>, Smarterdam.DataSource.NewEcoSCADADataService.IEcoSCADADataService {
        
        public EcoSCADADataServiceClient() {
        }
        
        public EcoSCADADataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EcoSCADADataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EcoSCADADataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EcoSCADADataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UserExists(string user, string password, string guid) {
            return base.Channel.UserExists(user, password, guid);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string> GetUserInfo(string userName, string guid) {
            return base.Channel.GetUserInfo(userName, guid);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string>[] GetListOfBuildingsForUser(int userId, string guid) {
            return base.Channel.GetListOfBuildingsForUser(userId, guid);
        }
        
        public System.Collections.Generic.KeyValuePair<int, string>[] GetListOfMeasurementsForBuilding(int buildingId, Smarterdam.DataSource.NewEcoSCADADataService.MeasurementType mode, string guid) {
            return base.Channel.GetListOfMeasurementsForBuilding(buildingId, mode, guid);
        }
        
        public Smarterdam.DataSource.NewEcoSCADADataService.BuildingP GetBuildingProperties(int buildingId, string guid) {
            return base.Channel.GetBuildingProperties(buildingId, guid);
        }
        
        public Smarterdam.DataSource.NewEcoSCADADataService.MeasurementP GetMeasurementProperties(int measurementId, string guid) {
            return base.Channel.GetMeasurementProperties(measurementId, guid);
        }
        
        public Smarterdam.DataSource.NewEcoSCADADataService.MSResult GetMeasurementStat(int measurementId, System.Nullable<int> referenceId, Smarterdam.DataSource.NewEcoSCADADataService.MeaserementStatistics mode, System.DateTime from, System.DateTime to, string guid) {
            return base.Channel.GetMeasurementStat(measurementId, referenceId, mode, from, to, guid);
        }
        
        public Smarterdam.DataSource.NewEcoSCADADataService.Data[] GetMeasurementData(int measurementId, Smarterdam.DataSource.NewEcoSCADADataService.ExportMode mode, Smarterdam.DataSource.NewEcoSCADADataService.dataResolution resolution, System.DateTime from, System.DateTime to, string guid) {
            return base.Channel.GetMeasurementData(measurementId, mode, resolution, from, to, guid);
        }
        
        public Smarterdam.DataSource.NewEcoSCADADataService.Data[] GetAdvancedDataQuery(int measurement, System.DateTime from, System.DateTime to, Smarterdam.DataSource.NewEcoSCADADataService.DataExportMode ex, string guid) {
            return base.Channel.GetAdvancedDataQuery(measurement, from, to, ex, guid);
        }
        
        public void SetSavingsForMeasurement(int measurementId, double savings, string guid) {
            base.Channel.SetSavingsForMeasurement(measurementId, savings, guid);
        }
    }
}
